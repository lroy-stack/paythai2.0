{"version":3,"file":"static/js/398.f5385342.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/icons-material/esm/Email.js","../node_modules/@mui/icons-material/esm/Lock.js","pages/Signup.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nvar _span;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport Typography from \"../Typography/index.js\";\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active,\n  variants: [{\n    props: {\n      variant: 'filled'\n    },\n    style: {\n      [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n        marginTop: 16\n      }\n    }\n  }, {\n    props: {\n      position: 'start'\n    },\n    style: {\n      marginRight: 8\n    }\n  }, {\n    props: {\n      position: 'end'\n    },\n    style: {\n      marginLeft: 8\n    }\n  }, {\n    props: {\n      disablePointerEvents: true\n    },\n    style: {\n      pointerEvents: 'none'\n    }\n  }]\n})));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = {\n    ...props,\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? (/* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1z\"\n}), 'Lock');","import React from \"react\";\nimport { Box, Typography, TextField, Button, InputAdornment, useTheme, useMediaQuery } from \"@mui/material\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport EmailIcon from \"@mui/icons-material/Email\";\nimport LockIcon from \"@mui/icons-material/Lock\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: Yup.string()\n    .min(12, \"At least 12 characters\")\n    .matches(/[A-Z]/, \"At least one uppercase letter\")\n    .matches(/[a-z]/, \"At least one lowercase letter\")\n    .matches(/\\d/, \"At least one number\")\n    .matches(/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/, \"At least one symbol (!@#$%^&*)\")\n    .required(\"Password is required\"),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(\"Confirm your password\"),\n});\n\nconst Signup = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const navigate = useNavigate(); // Hook para navegación\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      height=\"100vh\"\n      bgcolor=\"#f3f4f6\"\n      px={2}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection={isMobile ? \"column\" : \"row\"}\n        width=\"100%\"\n        maxWidth=\"700px\"\n        bgcolor=\"white\"\n        borderRadius={4}\n        boxShadow={3}\n        overflow=\"hidden\"\n      >\n        {!isMobile && (\n          <Box flex={1} bgcolor=\"#EAF4FF\" p={3} textAlign=\"center\">\n            <Typography variant=\"h5\" fontWeight=\"bold\" color=\"#007BFF\" mb={2}>\n              Welcome to PayThai\n            </Typography>\n            <Typography variant=\"body2\" color=\"#6B7280\" mb={3}>\n              Manage your cryptocurrency payments easily and securely.\n            </Typography>\n            <Box\n              component=\"img\"\n              src=\"https://www.gifss.com/economia/bitcoin/images/bitcoin-06.gif\"\n              alt=\"Bitcoin animation\"\n              sx={{ width: \"100%\", maxHeight: \"200px\", objectFit: \"contain\" }}\n            />\n          </Box>\n        )}\n\n        <Box flex={1.5} p={4}>\n          <Typography\n            variant=\"h4\"\n            fontWeight=\"bold\"\n            textAlign=\"center\"\n            color=\"#007BFF\"\n            mb={3}\n          >\n            Sign Up\n          </Typography>\n          <Formik\n            initialValues={{ email: \"\", password: \"\", confirmPassword: \"\" }}\n            validationSchema={SignupSchema}\n            onSubmit={(values) => console.log(values)}\n          >\n            {({ errors, touched, handleChange, values }) => (\n              <Form>\n                <Field\n                  as={TextField}\n                  label=\"Email\"\n                  name=\"email\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <EmailIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                  error={touched.email && Boolean(errors.email)}\n                  helperText={touched.email && errors.email}\n                />\n                <Field\n                  as={TextField}\n                  label=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LockIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                  onChange={handleChange}\n                  error={touched.password && Boolean(errors.password)}\n                  helperText={touched.password && errors.password}\n                />\n                <Field\n                  as={TextField}\n                  label=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LockIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                  error={touched.confirmPassword && Boolean(errors.confirmPassword)}\n                  helperText={touched.confirmPassword && errors.confirmPassword}\n                />\n                <Box mt={2}>\n                  <ReCAPTCHA sitekey=\"6LdguIYqAAAAAMXgzsrEcP07aDusNqnO_FLnHtwc\" />\n                </Box>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  fullWidth\n                  sx={{\n                    mt: 3,\n                    bgcolor: \"#FFD700\",\n                    color: \"#003366\",\n                    \"&:hover\": { bgcolor: \"#FFC107\" },\n                  }}\n                >\n                  Sign Up\n                </Button>\n                <Typography\n  variant=\"body2\"\n  textAlign=\"center\"\n  mt={2}\n  sx={{ fontWeight: \"bold\" }}\n>\n  Already have an account?{\" \"}\n  <Typography\n    component=\"span\"\n    color=\"#007BFF\"\n    sx={{ cursor: \"pointer\", fontWeight: \"bold\" }}\n    onClick={() => navigate(\"/login\")} // Navegar a Login\n  >\n    Log in\n  </Typography>\n</Typography>\n\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Signup;\n"],"names":["getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","position","disablePointerEvents","variant","memoTheme","_ref","theme","display","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","variants","style","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","children","className","component","disableTypography","variantProp","other","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","createSvgIcon","d","SignupSchema","Yup","shape","email","required","password","min","matches","confirmPassword","oneOf","Signup","useTheme","isMobile","useMediaQuery","breakpoints","down","navigate","useNavigate","Box","justifyContent","height","bgcolor","px","flexDirection","width","maxWidth","borderRadius","boxShadow","overflow","flex","p","textAlign","fontWeight","mb","src","alt","sx","objectFit","Formik","initialValues","validationSchema","onSubmit","values","console","log","errors","touched","handleChange","Form","Field","TextField","label","fullWidth","margin","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","EmailIcon","error","Boolean","helperText","type","LockIcon","onChange","mt","ReCAPTCHA","sitekey","Button","cursor","onClick"],"sourceRoot":""}