{"version":3,"file":"static/js/237.af0ecfc5.chunk.js","mappings":"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","sources":["pages/Contact.jsx","../node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["// src/pages/Contact.jsx\nimport React from \"react\";\nimport { Container, Typography, TextField, Button, Box } from \"@mui/material\";\n\nconst Contact = () => (\n  <Container sx={{ mt: 4 }}>\n    <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n      Contáctanos\n    </Typography>\n    <Typography variant=\"body1\" paragraph>\n      ¿Tienes alguna pregunta o necesitas más información? Completa el formulario\n      a continuación y nos pondremos en contacto contigo.\n    </Typography>\n    <Box component=\"form\" sx={{ mt: 2 }}>\n      <TextField\n        fullWidth\n        label=\"Nombre\"\n        variant=\"outlined\"\n        margin=\"normal\"\n      />\n      <TextField\n        fullWidth\n        label=\"Correo Electrónico\"\n        variant=\"outlined\"\n        margin=\"normal\"\n      />\n      <TextField\n        fullWidth\n        label=\"Mensaje\"\n        variant=\"outlined\"\n        margin=\"normal\"\n        multiline\n        rows={4}\n      />\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\" sx={{ mt: 2 }}>\n        Enviar\n      </Button>\n    </Box>\n  </Container>\n);\n\nexport default Contact;\n","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport getThemeProps from \"./getThemeProps.js\";\nimport useTheme from \"../useTheme/index.js\";\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  return getThemeProps({\n    theme,\n    name,\n    props\n  });\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["Contact","_jsxs","Container","sx","mt","children","_jsx","Typography","variant","component","gutterBottom","paragraph","Box","TextField","fullWidth","label","margin","multiline","rows","Button","color","type","createStyled","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","_ref","themeId","theme","useTheme","getThemeProps","useThemePropsSystem","options","arguments","length","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref3","Math","max","xs","React","ref","className","classes","classesProp","other","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled","useDefaultProps"],"sourceRoot":""}